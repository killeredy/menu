/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF, useAnimations, Text } from '@react-three/drei'
import * as THREE from "three";

export default function Model({sobreData, setSobre, animacao = "pouso", setAnimacao }) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('./models/my.gltf')
  const { actions, names, mixer } = useAnimations(animations, group)
  const [showSobre, setShowSobre] =  useState(false);
  const { sobre } = sobreData;



  useEffect(()=>{
    changeAnimacao(animacao);
  },[])
  

  const changeAnimacao =(anim)=>{
    if(anim){
      if(anim ==  "pouso"){
        actions[anim].clampWhenFinished = true
        actions[anim].loop = THREE.LoopOnce;
      }

      if(actions[anim]){
        actions[anim].reset().fadeIn(0.5).play();    
        mixer.addEventListener('finished', (e) =>{
          setAnimacao('idle');
          setShowSobre(true);
          actions['idle'].reset().fadeIn(0.5).play();
        });
      }
  

    }
  }

  if(animacao != 'pouso'){
    changeAnimacao(animacao);
  }


  const handleSetSobre =()=>{
    if(setSobre){
      setSobre();
    }
  }



  return (
    <group ref={group} dispose={null} position={[0,0,0.5]} onPointerDown={(e)=> handleSetSobre()} >
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />          
          <skinnedMesh name="body" geometry={nodes.body.geometry} material={materials.caracte} skeleton={nodes.body.skeleton} />
        </group>
        {showSobre && (
        <Text position={[-0.03, 0, 1.5]} scale={0.02} lineHeight={1.4} name="SOBRE" color={'black'} anchorX="center"  anchorY="middle" >
              { sobre.title }
        </Text>
        )}
      </group>
    </group>
  )
}

useGLTF.preload('./models/my.gltf')
